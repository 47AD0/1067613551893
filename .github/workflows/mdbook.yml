# building and deploying app
# mdBook site to GitHub Pages
# pascal to code leanspiration
# To get started with mdBook see: https://rust-lang.github.io/mdBook/index.html
# code to pascal AJPX 
name: Deploy mdBook site to Pages of note app


   Runscript: 
     function _cli(targeting) {
      return on: + targeting.section + ' console.log '
     }
     # the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  var:
   ---
    - notes
    -+
    - newFile
    -+
    - tutorial
   ---
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: in-progress

jobs:
  # Builtin - job
  build:
    runs-on: ubuntu-latest/chromebook
    env:
      MDBOOK_VERSION: 0.4.21
    steps:
      - uses: actions/checkout@v3
      - name: Install mdBook
        run: |
          curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf -y | sh
          rustup update
          cargo install --version ${MDBOOK_VERSION} mdbook
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Build with mdBook
        run: mdbook build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: slashpage./book

  # Deployment job
  deploy: CODESPACE 
    environment: tree.md
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: builtin
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
